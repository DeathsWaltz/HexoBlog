<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用canal进行mysql数据实时同步</title>
      <link href="/2020/03/07/use-canal/"/>
      <url>/2020/03/07/use-canal/</url>
      
        <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>对数据库进行实时增量备份。</p><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p><code>mysql</code>数据库需要先开启 <code>Binlog</code>写入功能，配置<code>binlog-format</code> 为 <code>ROW</code>模式，<code>my.cnf</code>中配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">log-bin=mysql-bin # 开启 binlog</span><br><span class="line">binlog-format=ROW # 选择 ROW 模式</span><br><span class="line">server_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span><br></pre></td></tr></table></figure><h4 id="拉取Docker镜像"><a href="#拉取Docker镜像" class="headerlink" title="拉取Docker镜像"></a>拉取Docker镜像</h4><p>使用<code>docker</code>启动<code>canal-server</code></p><ol><li>访问<code>docker hub</code>获取最新的版本 访问：<a href="https://hub.docker.com/r/canal/canal-server/tags/" target="_blank" rel="noopener">https://hub.docker.com/r/canal/canal-server/tags/</a></li><li>下载对应的版本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull canal/canal-server:lastet</span><br></pre></td></tr></table></figure><h4 id="启动（单机模式）"><a href="#启动（单机模式）" class="headerlink" title="启动（单机模式）"></a>启动（单机模式）</h4><p>使用<code>canal</code>提供的<code>run.sh</code>脚本:</p><p> <a href="https://github.com/alibaba/canal/blob/master/docker/run.sh" target="_blank" rel="noopener">https://github.com/alibaba/canal/blob/master/docker/run.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 下载脚本</span><br><span class="line">wget https://raw.githubusercontent.com/alibaba/canal/master/docker/run.sh </span><br><span class="line"><span class="meta">#</span> 构建一个destination name为sys_info的队列，命令中mysql的链接地址为需要备份的数据库</span><br><span class="line">sh run.sh -e canal.auto.scan=false \</span><br><span class="line">  -e canal.destinations=sys_info \</span><br><span class="line">  -e canal.instance.master.address=***.mysql.***.rds.aliyuncs.com:3306  \</span><br><span class="line">  -e canal.instance.dbUsername=****  \</span><br><span class="line">  -e canal.instance.dbPassword=****  \</span><br><span class="line">  -e canal.instance.connectionCharset=UTF-8 \</span><br><span class="line">  -e canal.instance.tsdb.enable=true \</span><br><span class="line">  -e canal.instance.gtidon=false</span><br></pre></td></tr></table></figure><p><code>docker</code>模式下，单<code>docker</code>实例只能运行一个<code>instance</code>，主要为配置问题。</p><h4 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h4><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307141300.png" alt></p><p>successful代表<code>canal-server</code>启动成功。</p><h3 id="启动canal-adapter"><a href="#启动canal-adapter" class="headerlink" title="启动canal-adapter"></a>启动canal-adapter</h3><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><code>canal-adapter</code>下载地址：<a href="https://github.com/alibaba/canal/releases" target="_blank" rel="noopener">https://github.com/alibaba/canal/releases</a></p><p>获取对应<code>canal-server(canal.deployer)</code>版本的<code>canal-adapter</code></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307142325.png" alt></p><p>最好使用稳定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>下载canal-adapter </span><br><span class="line"><span class="meta">#</span>$&#123;version&#125; 为对应版本 如 1.1.4</span><br><span class="line">wget https://github.com/alibaba/canal/releases/download/canal-$&#123;version&#125;/canal.adapter-$&#123;version&#125;.tar.gz </span><br><span class="line"><span class="meta">#</span>下载后解压到指定目录</span><br><span class="line">tar -zxvf canal.adapter-$&#123;version&#125;.tar.gz -C canal-adapter</span><br></pre></td></tr></table></figure><p>修改配置文件<code>conf/application.yml</code>为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">    <span class="attr">default-property-inclusion:</span> <span class="string">non_null</span></span><br><span class="line"></span><br><span class="line"><span class="attr">canal.conf:</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">tcp</span> <span class="comment"># kafka rocketMQ</span></span><br><span class="line">  <span class="attr">canalServerHost:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:11111</span></span><br><span class="line">  <span class="attr">batchSize:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">syncBatchSize:</span> <span class="number">1000</span></span><br><span class="line">  <span class="attr">retries:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">timeout:</span></span><br><span class="line">  <span class="attr">canalAdapters:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">instance:</span> <span class="string">sys_info</span> <span class="comment"># canal instance Name or mq topic name  </span></span><br><span class="line">    <span class="attr">groups:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">groupId:</span> <span class="string">g1</span></span><br><span class="line">      <span class="attr">outerAdapters:</span></span><br><span class="line">      <span class="comment">#- name: logger</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">rdb</span>  <span class="comment"># 指定为rdb类型同步 # 接收数据的新数据库</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">mysql1</span> <span class="comment"># 指定adapter的唯一key, 与表映射配置中outerAdapterKey对应</span></span><br><span class="line">        <span class="attr">properties:</span></span><br><span class="line">          <span class="attr">jdbc.driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span> <span class="comment"># jdbc驱动名, 部分jdbc的jar包需要自行放致lib目录下</span></span><br><span class="line">          <span class="attr">jdbc.url:</span> <span class="string">jdbc:mysql://***.***.rds.aliyuncs.com:3306/sys_info?useUnicode=true</span> <span class="comment"># jdbc url</span></span><br><span class="line">          <span class="attr">jdbc.username:</span> <span class="string">****</span> <span class="comment"># jdbc username</span></span><br><span class="line">          <span class="attr">jdbc.password:</span> <span class="string">****</span> <span class="comment"># jdbc password</span></span><br><span class="line">          <span class="attr">threads:</span> <span class="number">5</span>     <span class="comment"># 并行执行的线程数, 默认为1</span></span><br></pre></td></tr></table></figure><ol><li>其中 <code>outAdapter</code> 的配置: <code>name</code>统一为<code>rdb</code>,<code>key</code>为对应的数据源的唯一标识需和下面的表映射文件中的<code>outerAdapterKey</code>对应,<code>properties</code>为目标库<code>jdb</code>的相关参数</li><li>adapter将会自动加载<code>conf/rdb</code>下的所有<code>.yml</code>结尾的表映射配置文件</li></ol><h4 id="适配器列表"><a href="#适配器列表" class="headerlink" title="适配器列表"></a>适配器列表</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#最简单的处理, 将受到的变更事件通过日志打印的方式进行输出, 如配置所示, 只需要定义name: logger即可</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line">      <span class="attr">outerAdapters:</span>                        </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logger</span></span><br></pre></td></tr></table></figure><h4 id="RDB表映射文件"><a href="#RDB表映射文件" class="headerlink" title="RDB表映射文件"></a>RDB表映射文件</h4><p>修改 <code>conf/rdb/mytest_user.yml</code>文件:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dataSourceKey:</span> <span class="string">defaultDS</span>        <span class="comment"># 源数据源的key, 对应上面配置的srcDataSources中的值</span></span><br><span class="line"><span class="attr">destination:</span> <span class="string">sys_info</span>            <span class="comment"># cannal的instance或者MQ的topic</span></span><br><span class="line"><span class="attr">groupId:</span>                        <span class="comment"># 对应MQ模式下的groupId, 只会同步对应groupId的数据</span></span><br><span class="line"><span class="attr">outerAdapterKey:</span> <span class="string">mysql1</span>        <span class="comment"># adapter key, 对应上面配置outAdapters中的key</span></span><br><span class="line"><span class="attr">concurrent:</span> <span class="literal">true</span>                <span class="comment"># 是否按主键hash并行同步, 并行同步的表必须保证主键不会更改及主键不能为其他同步表的外键!!</span></span><br><span class="line"><span class="attr">dbMapping:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">sys_info</span>              <span class="comment"># 源数据源的database/shcema</span></span><br><span class="line">  <span class="attr">table:</span> <span class="string">user</span>                   <span class="comment"># 源数据源表名</span></span><br><span class="line">  <span class="attr">targetTable:</span> <span class="string">sys_info.tb_user</span>   <span class="comment"># 目标数据源的库名.表名</span></span><br><span class="line">  <span class="attr">targetPk:</span>                     <span class="comment"># 主键映射</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">id</span>                      <span class="comment"># 如果是复合主键可以换行映射多个</span></span><br><span class="line"><span class="comment">#  mapAll: true                 # 是否整表映射, 要求源表和目标表字段名一模一样 (如果targetColumns也配置了映射,则以targetColumns配置为准)</span></span><br><span class="line">  <span class="attr">targetColumns:</span>                <span class="comment"># 字段映射, 格式: 目标表字段: 源表字段, 如果字段名一样源表字段名可不填</span></span><br><span class="line">    <span class="attr">id:</span></span><br><span class="line">    <span class="attr">name:</span></span><br><span class="line">    <span class="attr">role_id:</span></span><br></pre></td></tr></table></figure><p>如果两个库之间表、字段都相同可直接进行镜像备份，<code>Mysql</code> 库间镜像<code>schema DDL DML</code>同步</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Mirror schema synchronize config</span></span><br><span class="line"><span class="attr">dataSourceKey:</span> <span class="string">defaultDS</span></span><br><span class="line"><span class="attr">destination:</span> <span class="string">sys_info</span></span><br><span class="line"><span class="attr">groupId:</span> <span class="string">g1</span></span><br><span class="line"><span class="attr">outerAdapterKey:</span> <span class="string">mysql1</span></span><br><span class="line"><span class="attr">concurrent:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">dbMapping:</span></span><br><span class="line">  <span class="attr">mirrorDb:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">sys_info</span></span><br></pre></td></tr></table></figure><p>其中<code>dbMapping.database</code>的值代表源库和目标库的<code>schema</code>名称，即两库的<code>schema</code>要一模一样</p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>将目标库的<code>jdbc jar</code>包放入<code>lib</code>文件夹 (其他数据库放入对应的驱动)</p><p>启动<code>canal-adapter</code>启动器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/startup.sh</span><br></pre></td></tr></table></figure><p>验证 修改<code>mysql sys_info.user</code>表的数据, 将会自动同步到新<code>mysql</code>数据库的<code>sys_info.user</code>表下面, 并会打出<code>DML</code>的<code>log</code></p><h4 id="adapter管理REST接口"><a href="#adapter管理REST接口" class="headerlink" title="adapter管理REST接口"></a>adapter管理REST接口</h4><ul><li>查询所有订阅同步的<code>canal instance</code>或<code>MQ topic</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1:8081/destinations</span><br></pre></td></tr></table></figure><ul><li>数据同步开关</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1:8081/syncSwitch/sys_info/off -X PUT</span><br></pre></td></tr></table></figure><p>针对 <code>sys_info</code>这个<code>canal instance/MQ topic</code> 进行开关操作. <code>off</code>代表关闭,<code>instance/topic</code>下的同步将阻塞或者断开连接不再接收数据, on代表开启</p><p>注: 如果在配置文件中配置了 <code>zookeeperHosts</code>项, 则会使用分布式锁来控制<code>HA</code>中的数据同步开关, 如果是单机模式则使用本地锁来控制开关</p><ul><li>数据同步开关状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1:8081/syncSwitch/sys_info</span><br></pre></td></tr></table></figure><p>查看指定 canal instance/MQ topic 的数据同步开关状态</p><h2 id="增加Prometheus监控"><a href="#增加Prometheus监控" class="headerlink" title="增加Prometheus监控"></a>增加Prometheus监控</h2><p>安装并部署对应平台的<code>prometheus</code>，参见<a href="prometheus-grafana">这里</a></p><p>配置<code>prometheus.yml</code>，添加<code>canal</code>的<code>job</code>，示例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'canal'</span></span><br><span class="line">   <span class="attr">static_configs:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['localhost:11112']</span> <span class="string">//端口配置即为canal.properties中的canal.metrics.pull.port</span></span><br></pre></td></tr></table></figure><p>导入模板(<a href="https://raw.githubusercontent.com/alibaba/canal/master/deployer/src/main/resources/metrics/Canal_instances_tmpl.json" target="_blank" rel="noopener">Canal_instances_tmpl.json</a>)，参考<a href="http://docs.grafana.org/reference/export_import/#importing-a-dashboard" target="_blank" rel="noopener">这里</a></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307150301.png" alt></p><p>导入后效果：</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307145939.png" alt></p><p>参考地址：</p><p><a href="https://github.com/alibaba/canal/wiki/QuickStart" target="_blank" rel="noopener">https://github.com/alibaba/canal/wiki/QuickStart</a></p><p><a href="https://github.com/alibaba/canal/wiki/Docker-QuickStart" target="_blank" rel="noopener">https://github.com/alibaba/canal/wiki/Docker-QuickStart</a></p><p><a href="https://github.com/alibaba/canal/wiki/ClientAdapter" target="_blank" rel="noopener">https://github.com/alibaba/canal/wiki/ClientAdapter</a></p><p><a href="https://github.com/alibaba/canal/wiki/Sync-RDB" target="_blank" rel="noopener">https://github.com/alibaba/canal/wiki/Sync-RDB</a></p><p><a href="https://github.com/alibaba/canal/wiki/Prometheus-QuickStart" target="_blank" rel="noopener">https://github.com/alibaba/canal/wiki/Prometheus-QuickStart</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> canal </tag>
            
            <tag> mysql </tag>
            
            <tag> canal-server </tag>
            
            <tag> canal-adapter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Prometheus、Grafana安装和配置监控Java应用</title>
      <link href="/2020/03/07/prometheus-grafana/"/>
      <url>/2020/03/07/prometheus-grafana/</url>
      
        <content type="html"><![CDATA[<h2 id="Prometheus安装"><a href="#Prometheus安装" class="headerlink" title="Prometheus安装"></a>Prometheus安装</h2><p>使用<code>docker</code>安装</p><p><code>docker</code>已经安装好之后，正式安装<code>prometheus</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d  -p 9090:9090 -v /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml   -v /etc/localtime:/etc/localtime prom/prometheus</span><br></pre></td></tr></table></figure><p>如果启动成功，访问<code>http://服务器地址:9090</code></p><h2 id="node-export-安装"><a href="#node-export-安装" class="headerlink" title="node export 安装"></a>node export 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d  -p 9100:9100 quay.io/prometheus/node-exporter</span><br></pre></td></tr></table></figure><p>安装完之后，需要修改<code>prometheus.yml</code>配置文件，增加要监听的job，需要指定job的名称，以及暴露的<code>metrics</code>的访问路径</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">"node"</span></span><br><span class="line">  <span class="comment"># metrics_path defaults to '/metrics'</span></span><br><span class="line">  <span class="comment">#  scheme defaults to 'http'.</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">["localhost:9001"]</span>  <span class="comment">#使用宿主机内网ip</span></span><br></pre></td></tr></table></figure><p>重启<code>prometheus</code>容器生效</p><h2 id="Grafana安装"><a href="#Grafana安装" class="headerlink" title="Grafana安装"></a>Grafana安装</h2><p>可以使用<code>grafana</code>展示监控视图。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=grafana -p 3001:3000 -v /var/lib/grafana:/var/lib/grafana -v /etc/grafana/grafana.ini:/etc/grafana/grafana.ini   -v /etc/localtime:/etc/localtime grafana/grafana</span><br></pre></td></tr></table></figure><p>访问<code>http://ip地址：指定的端口</code>，<code>grafana</code>安装成功，第一次访问需要修改密码，初始密码是<code>admin/admin</code>,修改密码之后，需要按照新密码登录。</p><h3 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h3><h5 id="添加数据源"><a href="#添加数据源" class="headerlink" title="添加数据源"></a>添加数据源</h5><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307104004.png" alt="添加数据源"></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307104106.png" alt></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307113107.png" alt></p><p><code>Name</code>为数据源名，<code>URL</code>为<code>prometheus</code>地址</p><h5 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h5><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307113316.png" alt="导入模板"></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307113537.png" alt></p><p>填入<code>8919</code>导入模板</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307113623.png" alt></p><p><code>Prometheus Data Source</code>为<code>grafana</code>添加的数据源</p><h2 id="监控jvm"><a href="#监控jvm" class="headerlink" title="监控jvm"></a>监控jvm</h2><p>web项目中增加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.micrometer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>micrometer-registry-prometheus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>application.yml</code>中添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">'*'</span>  <span class="comment">#开启 Actuator 服务</span></span><br><span class="line">  <span class="attr">metrics:</span><span class="comment">#将该工程应用名称添加到计量器注册表的 tag 中</span></span><br><span class="line">    <span class="attr">tags:</span></span><br><span class="line">      <span class="attr">application:</span> <span class="string">$&#123;spring.application.name&#125;</span>  <span class="comment">#应用名称比如：app</span></span><br></pre></td></tr></table></figure><p>在工程启动主类中增加<code>监控 JVM 性能指标注释下的</code>内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebsiteApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(WebsiteApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//监控 JVM 性能指标</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">MeterRegistryCustomizer&lt;MeterRegistry&gt; <span class="title">configurer</span><span class="params">(@Value(<span class="string">"$&#123;spring.application.name&#125;"</span>)</span> String applicationName)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> registry -&gt; registry.config().commonTags(<span class="string">"application"</span>, applicationName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动动服务，浏览器访问 <code>http://127.0.0.1:8088/actuator/prometheus</code> 就可以看到应用的 一系列不同类型 <code>metrics</code> 信息</p><h4 id="Prometheus配置新增"><a href="#Prometheus配置新增" class="headerlink" title="Prometheus配置新增"></a>Prometheus配置新增</h4><p>在<code>prometheus.yml</code>文件新增如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'application'</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">'/actuator/prometheus'</span></span><br><span class="line">    <span class="attr">file_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">files:</span> <span class="string">['/etc/prometheus/*.json']</span></span><br></pre></td></tr></table></figure><p>新建<code>json</code>文件<code>app.json</code>,内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"targets"</span>: [</span><br><span class="line">            <span class="string">"ip:port"</span><span class="comment">//项目访问地址</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"labels"</span>: &#123;</span><br><span class="line">            <span class="attr">"instance"</span>: <span class="string">"app"</span>,<span class="comment">//可使用应用名称</span></span><br><span class="line">            <span class="attr">"service"</span>: <span class="string">"app-service"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可增加多个项目的配置</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>重启 <code>Prometheus</code> 服务，查看 <code>Prometheu</code>界面 <code>Target</code> 中确认是否添加成功。</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307135140.png" alt></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307135341.png" alt></p><h4 id="配置-Grafana-JVM-Dashboard-监控项"><a href="#配置-Grafana-JVM-Dashboard-监控项" class="headerlink" title="配置 Grafana JVM Dashboard 监控项"></a>配置 Grafana JVM Dashboard 监控项</h4><p>参考grafana配置中导入模板的操作，导入<code>4701</code>模板</p><p>效果如下：</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200307134443.png" alt></p><p>参考地址：</p><p><a href="https://blog.csdn.net/aixiaoyang168/article/details/100866159" target="_blank" rel="noopener">https://blog.csdn.net/aixiaoyang168/article/details/100866159</a></p><p><a href="https://cloud.tencent.com/developer/article/1442143" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1442143</a></p><p><a href="https://www.jianshu.com/p/12df755f2c66" target="_blank" rel="noopener">https://www.jianshu.com/p/12df755f2c66</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
            <tag> Grafana </tag>
            
            <tag> Java </tag>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang安装</title>
      <link href="/2020/02/19/golang-install/"/>
      <url>/2020/02/19/golang-install/</url>
      
        <content type="html"><![CDATA[<p>基本信息</p><p>centos 7</p><p>下载安装包</p><p>地址：<a href="https://studygolang.com/dl" target="_blank" rel="noopener">https://studygolang.com/dl</a></p><p>下载对应最新安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">version为对应的版本号 plantfrom为平台</span></span><br><span class="line">wget https://studygolang.com/dl/golang/go&#123;version&#125;.&#123;plantfrom&#125;-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>解压安装</p><p>解包放在/usr/local/目录下，会生成go文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf go&#123;version&#125;.&#123;plantfrom&#125;-amd64.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure><p>配置Go环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编辑profile文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在文件末尾添加如下内容</span></span><br><span class="line"><span class="meta">#</span><span class="bash">go setting</span></span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export GOPATH=/usr/local/gopath</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br></pre></td></tr></table></figure><p>执行source /etc/profile指令，配置文件的环境变量立刻生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>验证生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看go版本信息</span></span><br><span class="line">go version</span><br><span class="line"><span class="meta">#</span><span class="bash">查看go环境变量配置</span></span><br><span class="line">go env</span><br></pre></td></tr></table></figure><p>配置代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编辑profile文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在文件末尾添加如下内容</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用 Go Modules 功能</span></span><br><span class="line">export GO111MODULE=on</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置 GOPROXY 环境变量</span></span><br><span class="line">export GOPROXY=https://goproxy.io</span><br></pre></td></tr></table></figure><p>执行以下命令生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>参考地址：</p><p><a href="https://yq.aliyun.com/articles/645569" target="_blank" rel="noopener">https://yq.aliyun.com/articles/645569</a></p><p><a href="https://goproxy.io/zh/" target="_blank" rel="noopener">https://goproxy.io/zh/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> golang </tag>
            
            <tag> go </tag>
            
            <tag> goproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用drone实现自动化部署安装配置以及踩坑</title>
      <link href="/2020/02/18/docker-rancher-drone-gitea/"/>
      <url>/2020/02/18/docker-rancher-drone-gitea/</url>
      
        <content type="html"><![CDATA[<h4 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h4><p>centos 7 阿里云</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 kubelet kubeadm kubectl</span></span><br><span class="line">sudo yum install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><h5 id="使用官方脚本自动安装"><a href="#使用官方脚本自动安装" class="headerlink" title="使用官方脚本自动安装"></a>使用官方脚本自动安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><h5 id="手动安装帮助（阿里云ecs可通过内网安装）"><a href="#手动安装帮助（阿里云ecs可通过内网安装）" class="headerlink" title="手动安装帮助（阿里云ecs可通过内网安装）"></a>手动安装帮助（阿里云ecs可通过内网安装）</h5><p>centos7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 2: 添加软件源信息</span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 3: 更新并安装 Docker-CE</span></span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 4: 开启Docker服务</span></span><br><span class="line">sudo service docker start</span><br><span class="line"></span><br><span class="line">注意：其他注意事项在下面的注释中</span><br><span class="line"><span class="meta">#</span><span class="bash"> 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，你可以通过以下方式开启。同理可以开启各种测试版本等。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/yum.repos.d/docker-ce.repo</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   将 [docker-ce-test] 下方的 enabled=0 修改为 enabled=1</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装指定版本的Docker-CE:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Step 1: 查找Docker-CE的版本:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum list docker-ce.x86_64 --showduplicates | sort -r</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Loading mirror speeds from cached hostfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Loaded plugins: branch, fastestmirror, langpacks</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   Available Packages</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Step2 : 安装指定版本的Docker-CE: (VERSION 例如上面的 17.03.0.ce.1-1.el7.centos)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo yum -y install docker-ce-[VERSION]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：在某些版本之后，docker-ce安装出现了其他依赖包，如果安装失败的话请关注错误信息。例如 docker-ce 17.03 之后，需要先安装 docker-ce-selinux。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum list docker-ce-selinux- --showduplicates | sort -r</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo yum -y install docker-ce-selinux-[VERSION]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过经典网络、VPC网络内网安装时，用以下命令替换Step 2中的命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 经典网络：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo yum-config-manager --add-repo http://mirrors.aliyuncs.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VPC网络：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sudo yum-config-manager --add-repo http://mirrors.could.aliyuncs.com/docker-ce/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure><h5 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h5><p>新建或修改<code>/etc/docker/daemon.json</code>，加入：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">        <span class="string">"https://dockerhub.azk8s.cn"</span>,</span><br><span class="line">        <span class="string">"https://reg-mirror.qiniu.com"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一定要确保格式没有问题，否则 docker 无法启动，修改完成后执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">重新加载配置</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="meta">#</span><span class="bash">启动Docker</span></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install docker-compose</span><br></pre></td></tr></table></figure><h4 id="安装Rancher1-x"><a href="#安装Rancher1-x" class="headerlink" title="安装Rancher1.x"></a>安装Rancher1.x</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -v /var/lib/mysql:/var/lib/mysql --restart=unless-stopped -p 8236:8080 rancher/server</span><br></pre></td></tr></table></figure><p>运行成功后访问<code>ip:8236</code></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200218/index.jpg" alt="rancher"></p><p>进行配置,先设置<code>系统管理&gt;访问控制</code></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/control.jpg" alt="rancher"></p><p><code>基础框架&gt;添加主机</code>根据提示添加主机</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200218/addhost.jpg" alt="rancher"></p><p><code>API&gt;密钥</code>生成账号API Keys</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200218/addkeys.jpg" alt="rancher"></p><p><code>基础架构&gt;镜像库</code>添加私有镜像库</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200218/addrepo.jpg" alt="rancher"></p><h4 id="安装Gitea"><a href="#安装Gitea" class="headerlink" title="安装Gitea"></a>安装Gitea</h4><p>使用<code>docker-compose</code>运行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose -f gitea-docker-compose.yml  up -d</span><br></pre></td></tr></table></figure><p><code>gitea-docker-compose.yml</code>文件内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitea:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitea/gitea:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"10022:22"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"10080:3000"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/var/lib/gitea:/data</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><p>访问<code>ip:10080</code>进入安装界面进行配置。</p><h4 id="安装Drone"><a href="#安装Drone" class="headerlink" title="安装Drone"></a>安装Drone</h4><p>在Gitea新建OAuth Application,参考官方文档。</p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/20200218/adddrone.jpg" alt="rancher"></p><p>将生成的客户端ID和客户端密钥保存。</p><p><code>docker-compose.yml</code>文件内容:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">drone-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drone/drone:1.2.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">drone-server</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">dronenet</span>        <span class="comment"># 让drone-server和drone-agent处于一个网络中，方便进行RPC通信</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'8099:80'</span>      <span class="comment"># Web管理面板的入口 PROTO=http  时使用该端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'8999:443'</span>     <span class="comment"># Web管理面板的入口 PROTO=https 时使用该端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'9000:9000'</span>    <span class="comment"># RPC服务端口</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span>   <span class="comment"># docker.sock [1]</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/drone/:/var/lib/drone</span>             <span class="comment"># drone数据存放路径</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_AGENTS_ENABLED=false</span>                   <span class="comment"># 使用Runner</span></span><br><span class="line">      <span class="comment">#- DRONE_GITLAB_SERVER=$&#123;DRONE_GITLAB_SERVER&#125;</span></span><br><span class="line">      <span class="comment">#- DRONE_GITLAB_CLIENT_ID=$&#123;DRONE_GITLAB_CLIENT_ID&#125;</span></span><br><span class="line">      <span class="comment">#- DRONE_GITLAB_CLIENT_SECRET=$&#123;DRONE_GITLAB_CLIENT_SECRET&#125;</span></span><br><span class="line">      <span class="comment">#- DRONE_GITHUB_SERVER=$&#123;DRONE_GITHUB_SERVER&#125;</span></span><br><span class="line">     <span class="comment"># - DRONE_GITHUB_CLIENT_ID=$&#123;DRONE_GITHUB_CLIENT_ID&#125;</span></span><br><span class="line">     <span class="comment"># - DRONE_GITHUB_CLIENT_SECRET=$&#123;DRONE_GITHUB_CLIENT_SECRET&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GITEA_SERVER=$&#123;DRONE_GITEA_SERVER&#125;</span>                   <span class="comment"># github的地址</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GITEA_CLIENT_ID=$&#123;DRONE_GITEA_CLIENT_ID&#125;</span>          <span class="comment"># gitea获得的ClientID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_GITEA_CLIENT_SECRET=$&#123;DRONE_GITEA_CLIENT_SECRET&#125;</span>  <span class="comment"># gitea获得的ClientSecret</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=$&#123;DRONE_RPC_SECRET&#125;</span>                      <span class="comment"># RPC秘钥     [2]</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SERVER_HOST=$&#123;DRONE_SERVER_HOST&#125;</span>                    <span class="comment"># RPC域名(在一个实例上可以不用)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_SERVER_PROTO=$&#123;DRONE_SERVER_PROTO&#125;</span>                  <span class="comment"># git webhook使用的协议(我建议http)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_OPEN=true</span>                                           <span class="comment"># 开发drone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DATASOURCE=/var/lib/drone/drone.sqlite</span>     <span class="comment"># 数据库文件</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DATABASE_DRIVER=sqlite3</span>                             <span class="comment"># 数据库驱动，我这里选的sqlite</span></span><br><span class="line">      <span class="comment">#- DRONE_DATABASE_DRIVER=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DEBUG=true</span>                                          <span class="comment"># 调试相关，部署的时候建议先打开</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_DEBUG=true</span>                                     <span class="comment"># 调试相关，部署的时候建议先打开</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_TRACE=true</span>                                     <span class="comment"># 调试相关，部署的时候建议先打开</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_USER_CREATE=username:***,admin:true</span>           <span class="comment"># 初始管理员用户 gitea用户名</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span>                                          <span class="comment"># 时区</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">drone-agent:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">drone/agent:1.2.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">drone-agent</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">dronenet</span>     <span class="comment"># 让drone-server和drone-agent处于一个网络中，方便进行RPC通信</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">drone-server</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span> <span class="comment"># docker.sock [1]</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SERVER=http://drone-server</span>  <span class="comment"># RPC服务地址</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_SECRET=$&#123;DRONE_RPC_SECRET&#125;</span>  <span class="comment"># RPC秘钥  </span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RPC_PROTO=$&#123;DRONE_RPC_PROTO&#125;</span>    <span class="comment"># RPC协议(http || https)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_RUNNER_CAPACITY=2</span>               <span class="comment"># 最大并发执行的 pipeline 数</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_DEBUG=true</span>                      <span class="comment"># 调试相关，部署的时候建议先打开</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DRONE_LOGS_TRACE=true</span>                 <span class="comment"># 调试相关，部署的时候建议先打开</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">dronenet:</span>                                     <span class="comment"># 让drone-server和drone-agent处于一个网络中，方便进行RPC通信</span></span><br></pre></td></tr></table></figure><p><strong>[1]</strong> 因为插件本身也是一个容器，要在容器中(docker-server、drone-runnere)中运行容器。将docker.sock挂载到容器中，可以让容器通过docker unix socket API得到管理容器的能力。</p><p><strong>[2]</strong> <code>openssl rand -hex 16</code> 这个命令随机生成秘钥</p><p>.env</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#DRONE_GITHUB_CLIENT_ID=****</span><br><span class="line">#DRONE_GITHUB_CLIENT_SECRET=****</span><br><span class="line">DRONE_GITEA_SERVER=http://git****com</span><br><span class="line">DRONE_GITEA_CLIENT_ID=****</span><br><span class="line">DRONE_GITEA_CLIENT_SECRET=****</span><br><span class="line">#DRONE_GITLAB_SERVER=http://git.****.com</span><br><span class="line">#DRONE_GITLAB_CLIENT_ID=****</span><br><span class="line">#DRONE_GITLAB_CLIENT_SECRET=****</span><br><span class="line">DRONE_RPC_SECRET=*****</span><br><span class="line">DRONE_SERVER_HOST=drone.****.com</span><br><span class="line">DRONE_SERVER_PROTO=https</span><br><span class="line">DRONE_RPC_SERVER=****:9000</span><br><span class="line">DRONE_RPC_PROTO=http</span><br></pre></td></tr></table></figure><p>将<code>docker-compose.yml</code>和<code>.env</code>放在同一目录，然后运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><p>参考地址：</p><p><a href="https://yq.aliyun.com/articles/110806" target="_blank" rel="noopener">https://yq.aliyun.com/articles/110806</a></p><p><a href="https://juejin.im/post/5d97489ee51d457824771d47" target="_blank" rel="noopener">https://juejin.im/post/5d97489ee51d457824771d47</a></p><p><a href="https://docs.drone.io/server/provider/gitea/" target="_blank" rel="noopener">https://docs.drone.io/server/provider/gitea/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> rancher </tag>
            
            <tag> drone </tag>
            
            <tag> gitea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos+Seata+Spring boot+Mybatis plus多数据源事务控制</title>
      <link href="/2019/12/12/springboot-seate-multiple-datasource-mybatis-plus/"/>
      <url>/2019/12/12/springboot-seate-multiple-datasource-mybatis-plus/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>使用Mybatis plus多数据源无法控制事务.</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>使用Nacos为配置中心，Seata分布式事务管理.</p><h4 id="Nacos配置"><a href="#Nacos配置" class="headerlink" title="Nacos配置"></a>Nacos配置</h4><p>单机模式下运行Nacos</p><blockquote><p>Linux/Unix/Mac</p><p>Standalone means it is non-cluster Mode. * sh startup.sh -m standalone</p></blockquote><blockquote><p>Windows</p><p>cmd startup.cmd 或者双击 startup.cmd 文件</p></blockquote><p> 使用mysql</p><p>1.安装数据库，版本要求：5.6.5+</p><p>2.初始化mysql数据库，数据库初始化文件：nacos-mysql.sql</p><p>3.修改conf/application.properties文件，增加支持mysql数据源配置（目前只支持mysql），添加mysql数据源的url、用户名和密码。</p><p><code>conf\application.properties</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.platform=mysql</span><br><span class="line">db.num=1</span><br><span class="line">db.url.0=jdbc:mysql://****:3306/nacos_devtest?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span><br><span class="line">db.user=****</span><br><span class="line">db.password=****</span><br></pre></td></tr></table></figure><h4 id="Nacos项目中的配置"><a href="#Nacos项目中的配置" class="headerlink" title="Nacos项目中的配置"></a>Nacos项目中的配置</h4><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-config-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nacos-config-spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-discovery-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nacos-config-spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>application.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nacos:</span></span><br><span class="line">  <span class="attr">discovery:</span></span><br><span class="line">    <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span> <span class="comment">#根据实际情况配置</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br></pre></td></tr></table></figure><h4 id="Seata配置"><a href="#Seata配置" class="headerlink" title="Seata配置"></a>Seata配置</h4><p>建表</p><p>全局事务会话信息由3块内容构成，全局事务–&gt;分支事务–&gt;全局锁，对应表global_table、branch_table、lock_table，</p><p>mysql建表脚本存放于module seata-server–&gt;conf–&gt;db_store.sql</p><p>修改store.mode</p><p>打开seata-server–&gt;conf–&gt;file.conf，修改store.mode=”db”;也可以在启动时加命令参数-m db指定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">## transaction log store</span><br><span class="line">store &#123;</span><br><span class="line">  ## store mode: file、db</span><br><span class="line">  mode = &quot;db&quot; #修改为db</span><br><span class="line"></span><br><span class="line">  ## file store</span><br><span class="line">  file &#123;</span><br><span class="line">    dir = &quot;sessionStore&quot;</span><br><span class="line">    # branch session size , if exceeded first try compress lockkey, still exceeded throws exceptions</span><br><span class="line">    max-branch-session-size = 16384</span><br><span class="line">    # globe session size , if exceeded throws exceptions</span><br><span class="line">    max-global-session-size = 512</span><br><span class="line">    # file buffer size , if exceeded allocate new buffer</span><br><span class="line">    file-write-buffer-cache-size = 16384</span><br><span class="line">    # when recover batch read size</span><br><span class="line">    session.reload.read_size = 100</span><br><span class="line">    # async, sync</span><br><span class="line">    flush-disk-mode = async</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ## database store</span><br><span class="line">  db &#123;</span><br><span class="line">    ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp) etc.</span><br><span class="line">    datasource = &quot;dbcp&quot;</span><br><span class="line">    ## mysql/oracle/h2/oceanbase etc.</span><br><span class="line">    db-type = &quot;mysql&quot;   #修改为mysql</span><br><span class="line">    driver-class-name = &quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">    url = &quot;jdbc:mysql://******:3306/seata&quot; #配置数据库地址</span><br><span class="line">    user = &quot;****&quot;#用户名</span><br><span class="line">    password = &quot;******&quot;#密码</span><br><span class="line">    min-conn = 1</span><br><span class="line">    max-conn = 3</span><br><span class="line">    global.table = &quot;global_table&quot;</span><br><span class="line">    branch.table = &quot;branch_table&quot;</span><br><span class="line">    lock-table = &quot;lock_table&quot;</span><br><span class="line">    query-limit = 100</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交配置到nacos</p><p>运行<code>conf/nacos-config.sh</code>将<code>nacos-config.txt</code>的内容发送到nacos中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">transport.type=TCP</span><br><span class="line">transport.server=NIO</span><br><span class="line">transport.heartbeat=true</span><br><span class="line">transport.thread-factory.boss-thread-prefix=NettyBoss</span><br><span class="line">transport.thread-factory.worker-thread-prefix=NettyServerNIOWorker</span><br><span class="line">transport.thread-factory.server-executor-thread-prefix=NettyServerBizHandler</span><br><span class="line">transport.thread-factory.share-boss-worker=false</span><br><span class="line">transport.thread-factory.client-selector-thread-prefix=NettyClientSelector</span><br><span class="line">transport.thread-factory.client-selector-thread-size=1</span><br><span class="line">transport.thread-factory.client-worker-thread-prefix=NettyClientWorkerThread</span><br><span class="line">transport.thread-factory.boss-thread-size=1</span><br><span class="line">transport.thread-factory.worker-thread-size=8</span><br><span class="line">transport.shutdown.wait=3</span><br><span class="line">service.vgroup_mapping.my_test_tx_groyp=default  #分组</span><br><span class="line">service.enableDegrade=false</span><br><span class="line">service.disable=false</span><br><span class="line">service.max.commit.retry.timeout=-1</span><br><span class="line">service.max.rollback.retry.timeout=-1</span><br><span class="line">client.async.commit.buffer.limit=10000</span><br><span class="line">client.lock.retry.internal=10</span><br><span class="line">client.lock.retry.times=30</span><br><span class="line">store.mode=db</span><br><span class="line">store.file.dir=file_store/data</span><br><span class="line">store.file.max-branch-session-size=16384</span><br><span class="line">store.file.max-global-session-size=512</span><br><span class="line">store.file.file-write-buffer-cache-size=16384</span><br><span class="line">store.file.flush-disk-mode=async</span><br><span class="line">store.file.session.reload.read_size=100</span><br><span class="line">store.db.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line">store.db.datasource=dbcp</span><br><span class="line">store.db.db-type=mysql</span><br><span class="line">store.db.url=jdbc:mysql://*********:3306/seata?useUnicode=true   #数据库地址</span><br><span class="line">store.db.user=********         #用户名</span><br><span class="line">store.db.password=********     #密码</span><br><span class="line">store.db.min-conn=1</span><br><span class="line">store.db.max-conn=3</span><br><span class="line">store.db.global.table=global_table</span><br><span class="line">store.db.branch.table=branch_table</span><br><span class="line">store.db.query-limit=100</span><br><span class="line">store.db.lock-table=lock_table</span><br><span class="line">recovery.committing-retry-period=1000</span><br><span class="line">recovery.asyn-committing-retry-period=1000</span><br><span class="line">recovery.rollbacking-retry-period=1000</span><br><span class="line">recovery.timeout-retry-period=1000</span><br><span class="line">transaction.undo.data.validation=true</span><br><span class="line">transaction.undo.log.serialization=jackson</span><br><span class="line">transaction.undo.log.save.days=7</span><br><span class="line">transaction.undo.log.delete.period=86400000</span><br><span class="line">transaction.undo.log.table=undo_log</span><br><span class="line">transport.serialization=seata</span><br><span class="line">transport.compressor=none</span><br><span class="line">metrics.enabled=false</span><br><span class="line">metrics.registry-type=compact</span><br><span class="line">metrics.exporter-list=prometheus</span><br><span class="line">metrics.exporter-prometheus-port=9898</span><br></pre></td></tr></table></figure><p>启动</p><ul><li>源码启动: 执行Server.java的main方法</li><li>命令启动: <a href="http://seata-server.sh/" target="_blank" rel="noopener">seata-server.sh</a> -h 127.0.0.1 -p 8091 -m db -n 1 -DSEATA_ENV=test</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-h: 注册到注册中心的ip</span><br><span class="line">-p: Server rpc 监听端口</span><br><span class="line">-m: 全局事务会话信息存储模式，file、db，优先读取启动参数</span><br><span class="line">-n: Server node，多个Server时，需区分各自节点，用于生成不同的transactionId范围，以免冲突</span><br><span class="line">SEATA_ENV: 多环境配置参考 https://github.com/seata/seata/wiki/Multi-configuration-Isolation</span><br></pre></td></tr></table></figure><h4 id="Seata项目中的配置"><a href="#Seata项目中的配置" class="headerlink" title="Seata项目中的配置"></a>Seata项目中的配置</h4><p><code>pom.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;seata.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- seata 依赖jar包  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.protobuf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>protobuf-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;protobuf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;netty4.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>resource/registry.conf</code>对应nacos的IP端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line">  # file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span><br><span class="line">  type = &quot;nacos&quot;</span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = &quot;localhost&quot;</span><br><span class="line">    namespace = &quot;public&quot;</span><br><span class="line">    cluster = &quot;default&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">config &#123;</span><br><span class="line">  # file、nacos 、apollo、zk</span><br><span class="line">  type = &quot;nacos&quot;</span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = &quot;localhost&quot;</span><br><span class="line">    namespace = &quot;public&quot;</span><br><span class="line">    cluster = &quot;default&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>application.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">cloud:</span></span><br><span class="line">      <span class="attr">alibaba:</span></span><br><span class="line">        <span class="attr">seata:</span></span><br><span class="line">          <span class="attr">tx-service-group:</span> <span class="string">my_test_tx_group</span></span><br></pre></td></tr></table></figure><h5 id="参考地址："><a href="#参考地址：" class="headerlink" title="参考地址："></a>参考地址：</h5><p><a href="https://nacos.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">https://nacos.io/zh-cn/docs/deployment.html</a></p><p><a href="https://seata.io/zh-cn/" target="_blank" rel="noopener">https://seata.io/zh-cn/</a></p><p><a href="https://seata.io/zh-cn/docs/user/configurations.html" target="_blank" rel="noopener">https://seata.io/zh-cn/docs/user/configurations.html</a></p><p><a href="https://github.com/seata/seata-samples/tree/master/springcloud-nacos-seata" target="_blank" rel="noopener">https://github.com/seata/seata-samples/tree/master/springcloud-nacos-seata</a></p><p><a href="https://github.com/seata/seata-samples/tree/master/multiple-datasource-mybatis-plus" target="_blank" rel="noopener">https://github.com/seata/seata-samples/tree/master/multiple-datasource-mybatis-plus</a></p><p><a href="http://seata.io/zh-cn/blog/seata-nacos-analysis.html" target="_blank" rel="noopener">http://seata.io/zh-cn/blog/seata-nacos-analysis.html</a></p><p><a href="http://seata.io/zh-cn/docs/user/configurations.html" target="_blank" rel="noopener">http://seata.io/zh-cn/docs/user/configurations.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> spring boot </tag>
            
            <tag> seata </tag>
            
            <tag> mybatis plus </tag>
            
            <tag> 多数据源 </tag>
            
            <tag> 事务 </tag>
            
            <tag> nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven安装jar到本地仓库后jenkins编译项目引用不到问题</title>
      <link href="/2019/10/19/jenkins-maven/"/>
      <url>/2019/10/19/jenkins-maven/</url>
      
        <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><h5 id="maven安装jar到本地仓库后jenkins编译项目报错"><a href="#maven安装jar到本地仓库后jenkins编译项目报错" class="headerlink" title="maven安装jar到本地仓库后jenkins编译项目报错"></a>maven安装jar到本地仓库后jenkins编译项目报错</h5><h5 id="使用将jar安装到本地仓库的方法"><a href="#使用将jar安装到本地仓库的方法" class="headerlink" title="使用将jar安装到本地仓库的方法."></a>使用将jar安装到本地仓库的方法.</h5><p>安装jar到本地仓库命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.taobao.api -DartifactId=taobao-sdk  -Dversion=1.0 -Dpackaging=jar -Dfile=taobao-sdk-java-auto_1565853390086-20190917.jar</span><br></pre></td></tr></table></figure><p>然后在<code>pom.xml</code>文件中引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.taobao.api<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>taobao-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>安装后还是无法引用到jar包.</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>因maven本地仓库的目录是在运行用户目录的<code>.m2/reopsitory</code>下,<code>settings.xml</code>文件中有说明.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">  | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">  |</span></span><br><span class="line"><span class="comment">  | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment"> &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br></pre></td></tr></table></figure><p>执行jar包安装的命令是在root用户下运行的,安装后jar包被安装到了<code>/root/.m2/repository</code>目录下.</p><p>jenkins是使用rpm文件进行的安装,安装后jenkins运行在自建的用户下.</p><p>所以在jenkins的用户下引用不到安装后的jar包.</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>修改maven本地仓库的配置<code>settings.xml</code></p><p>在<code>&lt;settings&gt;</code>标签内新增</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jenkins 用户的目录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/var/lib/jenkins/.m2/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再重新执行jar包安装命令后解决.</p>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql保存日期mybatis查询后多8小时问题</title>
      <link href="/2019/10/19/mysql-timezone/"/>
      <url>/2019/10/19/mysql-timezone/</url>
      
        <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>发现查询出的日期数据与mysql数据库中的日期不符.</p><p>mysql查询出的数据是 2019-10-15 13:31:10 mybatis查询出的数据是 2019-10-15 05:31:10.</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>因mysql设置时区与 Tomcat java 使用的时区不同.</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>在数据库链接配置设置时区.</p><p>增加<code>serverTimezone=Asia/Shanghai</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql://localhost:3306/db?serverTimezone=Asia/Shanghai</span><br></pre></td></tr></table></figure><p>参考地址：</p><p> <a href="https://blog.csdn.net/babybabyup/article/details/97802707" target="_blank" rel="noopener">https://blog.csdn.net/babybabyup/article/details/97802707</a></p><p> <a href="https://blog.csdn.net/saroll57/article/details/51837551" target="_blank" rel="noopener">https://blog.csdn.net/saroll57/article/details/51837551</a></p><p> <a href="https://blog.csdn.net/a549654065/article/details/88664077" target="_blank" rel="noopener">https://blog.csdn.net/a549654065/article/details/88664077 </a></p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mybaits </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jenkins记录</title>
      <link href="/2019/09/12/use-jenkins/"/>
      <url>/2019/09/12/use-jenkins/</url>
      
        <content type="html"><![CDATA[<h3 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h3><h4 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h4><p>jenkins官网：<a href="https://jenkins.io/zh/" target="_blank" rel="noopener">https://jenkins.io/zh/</a></p><p>jenkins下载地址：<a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a></p><p>安装步骤参考：<a href="https://jenkins.io/zh/doc/book/installing/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/book/installing/</a></p><h4 id="jenkins配置Gitee-码云-持续集成"><a href="#jenkins配置Gitee-码云-持续集成" class="headerlink" title="jenkins配置Gitee(码云)持续集成"></a>jenkins配置Gitee(码云)持续集成</h4><p>参考：<a href="https://gitee.com/help/articles/4193" target="_blank" rel="noopener">https://gitee.com/help/articles/4193</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> 自动化构建 </tag>
            
            <tag> 自动部署 </tag>
            
            <tag> CI/CD </tag>
            
            <tag> 持续集成 </tag>
            
            <tag> 持续部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot分库分表方案</title>
      <link href="/2019/09/11/use-mycat/"/>
      <url>/2019/09/11/use-mycat/</url>
      
        <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><blockquote><p>因业务原因需要实现查询多库操作，目前多个库中表结构相同。</p></blockquote><blockquote><p>同时使用mysql数据库和sqlserver数据库。</p></blockquote><h3 id="Sharding-jdbc方案"><a href="#Sharding-jdbc方案" class="headerlink" title="Sharding-jdbc方案"></a>Sharding-jdbc方案</h3><h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;shardingsphere.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置sharding-jdbc参数"><a href="#配置sharding-jdbc参数" class="headerlink" title="配置sharding-jdbc参数"></a>配置sharding-jdbc参数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jiahua.ddxdataserver.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zaxxer.hikari.HikariDataSource;</span><br><span class="line"><span class="keyword">import</span> io.shardingsphere.api.config.rule.ShardingRuleConfiguration;</span><br><span class="line"><span class="keyword">import</span> io.shardingsphere.api.config.rule.TableRuleConfiguration;</span><br><span class="line"><span class="keyword">import</span> io.shardingsphere.api.config.strategy.NoneShardingStrategyConfiguration;</span><br><span class="line"><span class="keyword">import</span> io.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceShardingConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 需要手动配置事务管理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">transactionManager</span><span class="params">(@Qualifier(<span class="string">"dataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"dataSource"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ShardingRuleConfiguration shardingRuleConfig = <span class="keyword">new</span> ShardingRuleConfiguration();</span><br><span class="line">        <span class="comment">// 设置分表策略</span></span><br><span class="line">        shardingRuleConfig.getTableRuleConfigs().add(orderTableRule());</span><br><span class="line">        shardingRuleConfig.setDefaultDataSourceName(<span class="string">"ds0"</span>);</span><br><span class="line">        shardingRuleConfig.setDefaultTableShardingStrategyConfig(<span class="keyword">new</span> NoneShardingStrategyConfiguration());</span><br><span class="line"></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.setProperty(<span class="string">"sql.show"</span>, <span class="string">"true"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ShardingDataSourceFactory.createDataSource(dataSourceMap(), shardingRuleConfig, <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">16</span>), properties);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> TableRuleConfiguration <span class="title">orderTableRule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TableRuleConfiguration tableRule = <span class="keyword">new</span> TableRuleConfiguration();</span><br><span class="line">        <span class="comment">// 设置逻辑表名</span></span><br><span class="line">        tableRule.setLogicTable(<span class="string">"top_XXX"</span>);</span><br><span class="line">        <span class="comment">// ds$&#123;0..1&#125;.t_order_$&#123;0..2&#125; 也可以写成 ds$-&gt;&#123;0..1&#125;.t_order_$-&gt;&#123;0..1&#125;</span></span><br><span class="line">        tableRule.setActualDataNodes(<span class="string">"ds$&#123;0..2&#125;.top_order"</span>);</span><br><span class="line">        <span class="keyword">return</span> tableRule;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Map&lt;String, DataSource&gt; <span class="title">dataSourceMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, DataSource&gt; dataSourceMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置第一个数据源</span></span><br><span class="line">        HikariDataSource ds0 = <span class="keyword">new</span> HikariDataSource();</span><br><span class="line">        ds0.setDriverClassName(<span class="string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span>);</span><br><span class="line">        ds0.setJdbcUrl(<span class="string">"jdbc:sqlserver://192.168.xx.xx:1433; DatabaseName=XXXX1"</span>);</span><br><span class="line">        ds0.setUsername(<span class="string">"XXXX"</span>);</span><br><span class="line">        ds0.setPassword(<span class="string">"XXXX"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置第二个数据源</span></span><br><span class="line">        HikariDataSource ds1 = <span class="keyword">new</span> HikariDataSource();</span><br><span class="line">        ds1.setDriverClassName(<span class="string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span>);</span><br><span class="line">        ds1.setJdbcUrl(<span class="string">"jdbc:sqlserver://192.168.xx.xx:1433; DatabaseName=XXXX2"</span>);</span><br><span class="line">        ds1.setUsername(<span class="string">"XXXX"</span>);</span><br><span class="line">        ds1.setPassword(<span class="string">"XXXX"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置第三个数据源</span></span><br><span class="line">        HikariDataSource ds2 = <span class="keyword">new</span> HikariDataSource();</span><br><span class="line">        ds2.setDriverClassName(<span class="string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span>);</span><br><span class="line">        ds2.setJdbcUrl(<span class="string">"jdbc:sqlserver://192.168.XX.XX:1433; DatabaseName=XXXX3"</span>);</span><br><span class="line">        ds2.setUsername(<span class="string">"XXXX"</span>);</span><br><span class="line">        ds2.setPassword(<span class="string">"XXXX"</span>);</span><br><span class="line"></span><br><span class="line">        dataSourceMap.put(<span class="string">"ds0"</span>, ds0);</span><br><span class="line">        dataSourceMap.put(<span class="string">"ds1"</span>, ds1);</span><br><span class="line">        dataSourceMap.put(<span class="string">"ds2"</span>, ds2);</span><br><span class="line">        <span class="keyword">return</span> dataSourceMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h5><blockquote><p>使用后发现，sqlserver数据库中nvarchar类型无法对应java中String类型，报错如下：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.dao.InvalidDataAccessApiUsageException: Error attempting to get column <span class="string">'top_sku_properties_name'</span> from result set.  Cause: java.sql.SQLFeatureNotSupportedException: getNString</span><br><span class="line">; getNString; nested exception is java.sql.SQLFeatureNotSupportedException: getNString</span><br></pre></td></tr></table></figure><blockquote><p>暂未找到解决办法，改用mycat.</p></blockquote><hr><h3 id="Mycat方案"><a href="#Mycat方案" class="headerlink" title="Mycat方案"></a>Mycat方案</h3><p>mycat官网 <a href="http://mycat.io/" target="_blank" rel="noopener">http://mycat.io/</a></p><h4 id="mycat配置"><a href="#mycat配置" class="headerlink" title="mycat配置"></a>mycat配置</h4><h5 id="server-xml"><a href="#server-xml" class="headerlink" title="server.xml"></a>server.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- - - Licensed under the Apache License, Version 2.0 (the "License"); </span></span><br><span class="line"><span class="comment">- you may not use this file except in compliance with the License. - You </span></span><br><span class="line"><span class="comment">may obtain a copy of the License at - - http://www.apache.org/licenses/LICENSE-2.0 </span></span><br><span class="line"><span class="comment">- - Unless required by applicable law or agreed to in writing, software - </span></span><br><span class="line"><span class="comment">distributed under the License is distributed on an "AS IS" BASIS, - WITHOUT </span></span><br><span class="line"><span class="comment">WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. - See the </span></span><br><span class="line"><span class="comment">License for the specific language governing permissions and - limitations </span></span><br><span class="line"><span class="comment">under the License. --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mycat</span>:server <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"server.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:server</span> <span class="attr">xmlns:mycat</span>=<span class="string">"http://io.mycat/"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">system</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"nonePasswordLogin"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span> <span class="comment">&lt;!-- 0为需要密码登陆、1为不需要密码登陆 ,默认为0，设置为1则需要指定默认账户--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useHandshakeV10"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useSqlStat"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  <span class="comment">&lt;!-- 1为开启实时统计、0为关闭 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useGlobleTableCheck"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  <span class="comment">&lt;!-- 1为开启全加班一致性检测、0为关闭 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlExecuteTimeout"</span>&gt;</span>300<span class="tag">&lt;/<span class="name">property</span>&gt;</span>  <span class="comment">&lt;!-- SQL 执行超时 单位:秒--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sequnceHandlerType"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="sequnceHandlerPattern"&gt;(?:(\s*next\s+value\s+for\s*MYCATSEQ_(\w+))(,|\)|\s)*)+&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--必须带有MYCATSEQ_或者 mycatseq_进入序列匹配流程 注意MYCATSEQ_有空格的情况--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sequnceHandlerPattern"</span>&gt;</span>(?:(\s*next\s+value\s+for\s*MYCATSEQ_(\w+))(,|\)|\s)*)+<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"subqueryRelationshipCheck"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span> <span class="comment">&lt;!-- 子查询中存在关联查询的情况下,检查关联字段中是否有分片字段 .默认 false --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--  &lt;property name="useCompression"&gt;1&lt;/property&gt;--&gt;</span> <span class="comment">&lt;!--1为开启mysql压缩协议--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  &lt;property name="fakeMySQLVersion"&gt;5.6.20&lt;/property&gt;--&gt;</span> <span class="comment">&lt;!--设置模拟的MySQL版本号--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;property name="processorBufferChunk"&gt;40960&lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">&lt;property name="processors"&gt;1&lt;/property&gt; </span></span><br><span class="line"><span class="comment">&lt;property name="processorExecutor"&gt;32&lt;/property&gt; </span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--默认为type 0: DirectByteBufferPool | type 1 ByteBufferArena | type 2 NettyBufferPool --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"processorBufferPoolType"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--默认是65535 64K 用于sql解析时最大文本长度 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="maxStringLiteralLength"&gt;65535&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="sequnceHandlerType"&gt;0&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="backSocketNoDelay"&gt;1&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="frontSocketNoDelay"&gt;1&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="processorExecutor"&gt;16&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;property name="serverPort"&gt;8066&lt;/property&gt; &lt;property name="managerPort"&gt;9066&lt;/property&gt; </span></span><br><span class="line"><span class="comment">&lt;property name="idleTimeout"&gt;300000&lt;/property&gt; &lt;property name="bindIp"&gt;0.0.0.0&lt;/property&gt;</span></span><br><span class="line"><span class="comment">&lt;property name="dataNodeIdleCheckPeriod"&gt;300000&lt;/property&gt; 5 * 60 * 1000L; //连接空闲检查</span></span><br><span class="line"><span class="comment">&lt;property name="frontWriteQueueSize"&gt;4096&lt;/property&gt; &lt;property name="processors"&gt;32&lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--分布式事务开关，0为不过滤分布式事务，1为过滤分布式事务（如果分布式事务内只涉及全局表，则不过滤），2为不过滤分布式事务,但是记录分布式事务日志--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"handleDistributedTransactions"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">off heap for merge/order/group/limit      1开启   0关闭</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useOffHeapForMerge"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">单位为m</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"memoryPageSize"</span>&gt;</span>64k<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">单位为k</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"spillsFileBufferSize"</span>&gt;</span>1k<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useStreamOutput"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">单位为m</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"systemReserveMemorySize"</span>&gt;</span>384m<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--是否采用zookeeper协调切换  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useZKSwitch"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- XA Recovery Log日志路径 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="XARecoveryLogBaseDir"&gt;./&lt;/property&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- XA Recovery Log日志名称 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;property name="XARecoveryLogBaseName"&gt;tmlog&lt;/property&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--如果为 true的话 严格遵守隔离级别,不会在仅仅只有select语句的时候在事务中切换连接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"strictTxIsolation"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"useZKSwitch"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">system</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">"xxxx"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"schemas"</span>&gt;</span>box<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:server</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="schema-xml"><a href="#schema-xml" class="headerlink" title="schema.xml"></a>schema.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mycat</span>:schema <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"schema.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">"http://io.mycat/"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">checkSQLschema</span>=<span class="string">"false"</span> <span class="attr">sqlMaxLimit</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 需要查询的表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">"top_xxx"</span> <span class="attr">dataNode</span>=<span class="string">"ds0,ds1,ds3"</span> <span class="attr">needAddLimit</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">name</span>=<span class="string">"top_xxxx"</span> <span class="attr">dataNode</span>=<span class="string">"ds0,ds1,ds3"</span> <span class="attr">needAddLimit</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库节点 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"ds0"</span> <span class="attr">dataHost</span>=<span class="string">"sqlserver1"</span> <span class="attr">database</span>=<span class="string">"xxx1"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"ds1"</span> <span class="attr">dataHost</span>=<span class="string">"sqlserver1"</span> <span class="attr">database</span>=<span class="string">"xxx2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"ds3"</span> <span class="attr">dataHost</span>=<span class="string">"sqlserver1"</span> <span class="attr">database</span>=<span class="string">"xxx3"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- sqlserver数据库配置 以jdbc方式链接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">"sqlserver1"</span> <span class="attr">maxCon</span>=<span class="string">"1000"</span> <span class="attr">minCon</span>=<span class="string">"10"</span> <span class="attr">balance</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">writeType</span>=<span class="string">"0"</span> <span class="attr">dbType</span>=<span class="string">"sqlserver"</span> <span class="attr">dbDriver</span>=<span class="string">"jdbc"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span><span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">connectionInitSql</span>&gt;</span><span class="tag">&lt;/<span class="name">connectionInitSql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"hostM1"</span> <span class="attr">url</span>=<span class="string">"jdbc:sqlserver://192.168.xx.xx:1433"</span> <span class="attr">user</span>=<span class="string">"xxxx"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">password</span>=<span class="string">"xxxx"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>server.xml</code>中<code>user</code>标签对应<code>schema.xml</code>中<code>writeHost</code>标签的<code>user</code>.</p></blockquote><h5 id="rule-xml"><a href="#rule-xml" class="headerlink" title="rule.xml"></a>rule.xml</h5><p>不使用规则可不配置rule.xml (待研究.</p><h4 id="启动mycat"><a href="#启动mycat" class="headerlink" title="启动mycat"></a>启动mycat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mycat start</span><br></pre></td></tr></table></figure><blockquote><p>mycat启动后默认端口为8066，用户名、密码、数据库为<code>server.xml</code>中<code>user</code>的配置.</p><p>例：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">"xxxx"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span>xxxx<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"schemas"</span>&gt;</span>box<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>mycat启动后，项目中配置数据源后即可使用.</p></blockquote><h4 id="使用多数据源"><a href="#使用多数据源" class="headerlink" title="使用多数据源"></a>使用多数据源</h4><p>同时链接mysql和mycat。</p><p>参考  <a href="/2019/09/11/use-multi-datasource/">多数据源配置</a></p><h5 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h5><p><a href="https://github.com/xkcoding/spring-boot-demo" target="_blank" rel="noopener">https://github.com/xkcoding/spring-boot-demo</a></p><p><a href="http://www.mycat.io/document/mycat-definitive-guide.pdf" target="_blank" rel="noopener">http://www.mycat.io/document/mycat-definitive-guide.pdf</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> mycat </tag>
            
            <tag> database </tag>
            
            <tag> sharding-jdbc </tag>
            
            <tag> 分库分表 </tag>
            
            <tag> sqlserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring boot使用多数据源</title>
      <link href="/2019/09/11/use-multi-datasource/"/>
      <url>/2019/09/11/use-multi-datasource/</url>
      
        <content type="html"><![CDATA[<h4 id="依赖：-pom-xml"><a href="#依赖：-pom-xml" class="headerlink" title="依赖： pom.xml"></a>依赖： pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;baomidou.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="数据源配置：-application-yml"><a href="#数据源配置：-application-yml" class="headerlink" title="数据源配置： application.yml"></a>数据源配置： application.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">master:</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://129.xx.xx.xx:3306/jiahua?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">xxxx</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">xxxx</span></span><br><span class="line">        <span class="attr">slave:</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.microsoft.sqlserver.jdbc.SQLServerDriver</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:sqlserver://192.168.xx.xx:1433;</span> <span class="string">DatabaseName=xxx1</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">xxxx</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">xxxx</span></span><br><span class="line">        <span class="attr">slave1:</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.microsoft.sqlserver.jdbc.SQLServerDriver</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:sqlserver://192.168.xx.xx:1433;</span> <span class="string">DatabaseName=xxx2</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">xxxx</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">xxxx</span></span><br><span class="line">      <span class="attr">mp-enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="ServiceImpl"><a href="#ServiceImpl" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h4><p>@DS: 注解在类上或方法上来切换数据源，方法上的@DS优先级大于类上的@DS<br>默认走从库: @DS(value = “slave”)在类上，默认走从库，除非在方法在添加@DS(value = “master”)才走主库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@DS</span>(value = <span class="string">"slave"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">ItemMapper</span>, <span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">ItemService</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类上 &#123;<span class="doctag">@code</span> <span class="doctag">@DS</span>("slave")&#125; 代表默认从库，在方法上写 &#123;<span class="doctag">@code</span> <span class="doctag">@DS</span>("master")&#125; 代表默认主库</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@DS</span>(<span class="string">"master"</span>)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        baseMapper.insert(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 多数据源 </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换Hexo主题</title>
      <link href="/2019/09/11/change-themes/"/>
      <url>/2019/09/11/change-themes/</url>
      
        <content type="html"><![CDATA[<h3 id="原主题Next的Mist"><a href="#原主题Next的Mist" class="headerlink" title="原主题Next的Mist"></a>原主题Next的Mist</h3><p>根目录下的<code>_config.yml</code>文件配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">themes:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p><code>themes/next</code>目录下<code>_config.yml</code>文件配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Mist</span></span><br></pre></td></tr></table></figure><h3 id="更为主题cactus"><a href="#更为主题cactus" class="headerlink" title="更为主题cactus"></a>更为主题cactus</h3><p>主题地址：<a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener">https://github.com/probberechts/hexo-theme-cactus</a></p><h4 id="修改根目录下的-config-yml文件配置"><a href="#修改根目录下的-config-yml文件配置" class="headerlink" title="修改根目录下的_config.yml文件配置"></a>修改根目录下的<code>_config.yml</code>文件配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">cactus</span></span><br><span class="line"><span class="attr">theme_config:</span></span><br><span class="line">  <span class="attr">colorscheme:</span> <span class="string">white</span></span><br></pre></td></tr></table></figure><h4 id="修改themes-cactus目录下-config-yml文件配置"><a href="#修改themes-cactus目录下-config-yml文件配置" class="headerlink" title="修改themes/cactus目录下_config.yml文件配置"></a>修改<code>themes/cactus</code>目录下<code>_config.yml</code>文件配置</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">projects_url:</span> <span class="string">http://github.com/akapril</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span></span><br><span class="line">  <span class="comment"># About: /about</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">/search/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_links:</span></span><br><span class="line">  <span class="attr">github:</span> <span class="string">http://github.com/akapril</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">posts_overview:</span></span><br><span class="line">  <span class="attr">show_all_posts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="配置搜索"><a href="#配置搜索" class="headerlink" title="配置搜索"></a>配置搜索</h4><p>安装<code>hexo-generator-search</code>插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>创建搜索页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page search</span><br></pre></td></tr></table></figure><p>创建后内容修改成</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Search</span><br><span class="line">type: search</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>最后在<code>themes/cactus</code>目录下<code>_config.yml</code>文件配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="attr">search:</span> <span class="string">/search/</span></span><br></pre></td></tr></table></figure><p><code>nav</code>下导航菜单可随意命名配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">搜索:</span> <span class="string">/search/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> themes </tag>
            
            <tag> cactus </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018久石让与新日本爱乐世界梦幻交响乐团深圳音乐会</title>
      <link href="/2018/09/20/joehisaishi-wdo-2018-ch/"/>
      <url>/2018/09/20/joehisaishi-wdo-2018-ch/</url>
      
        <content type="html"><![CDATA[<h2 id="深圳之旅"><a href="#深圳之旅" class="headerlink" title="深圳之旅"></a>深圳之旅</h2><h3 id="济南遥墙机场安检中"><a href="#济南遥墙机场安检中" class="headerlink" title="济南遥墙机场安检中"></a>济南遥墙机场安检中</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180908_173437.jpg" alt="安检"></p><a id="more"></a><h3 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180908_185913.jpg" alt="出发"></p><h3 id="春茧体育馆"><a href="#春茧体育馆" class="headerlink" title="春茧体育馆"></a>春茧体育馆</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_140508.jpg" alt="春茧体育馆"></p><h3 id="送给久石让的花"><a href="#送给久石让的花" class="headerlink" title="送给久石让的花"></a>送给久石让的花</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_161748.jpg" alt="送给久石让的花"></p><h3 id="非官方周边"><a href="#非官方周边" class="headerlink" title="非官方周边"></a>非官方周边</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_165110.jpg" alt="非官方周边"></p><h3 id="非官方周边：徽章"><a href="#非官方周边：徽章" class="headerlink" title="非官方周边：徽章"></a>非官方周边：徽章</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_165235.jpg" alt="非官方周边：徽章"></p><h3 id="意外收获：面基下限大佬的意外惊喜"><a href="#意外收获：面基下限大佬的意外惊喜" class="headerlink" title="意外收获：面基下限大佬的意外惊喜"></a>意外收获：面基下限大佬的意外惊喜</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_233413.jpg" alt="意外收获"></p><h3 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_192941.jpg" alt="手册"></p><h3 id="渣像素1"><a href="#渣像素1" class="headerlink" title="渣像素1"></a>渣像素1</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_193037.jpg" alt="渣渣像素1"></p><h3 id="渣像素2"><a href="#渣像素2" class="headerlink" title="渣像素2"></a>渣像素2</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_193041.jpg" alt="渣渣像素2"></p><h3 id="渣像素3"><a href="#渣像素3" class="headerlink" title="渣像素3"></a>渣像素3</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_193043.jpg" alt="渣渣像素3"></p><h3 id="渣像素4"><a href="#渣像素4" class="headerlink" title="渣像素4"></a>渣像素4</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_201025.jpg" alt="渣渣像素4"></p><h3 id="渣像素5"><a href="#渣像素5" class="headerlink" title="渣像素5"></a>渣像素5</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_202211.jpg" alt="渣渣像素5"></p><h3 id="返程"><a href="#返程" class="headerlink" title="返程"></a>返程</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180910_062945.jpg" alt="返程"></p><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180910_063356.jpg" alt="返程"></p><h3 id="久石让同好群中群友拍摄"><a href="#久石让同好群中群友拍摄" class="headerlink" title="久石让同好群中群友拍摄"></a>久石让同好群中群友拍摄</h3><video id="video" controls preload="none" width="100%"><source id="mp4" src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/B898A2B47A936E08D34EAB8984CD341E.mp4" type="video/mp4"></video><video id="video" controls preload="none" width="100%"><source id="mp4" src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/F6C92BC62415ACFB515F59675F721C3A.mp4" type="video/mp4"></video>]]></content>
      
      
      <categories>
          
          <category> 音乐会 </category>
          
          <category> 久石让 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2018 </tag>
            
            <tag> joehisaishi </tag>
            
            <tag> wdo </tag>
            
            <tag> 久石让 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Github Page和Hexo搭建个人博客</title>
      <link href="/2016/06/17/build-blog/"/>
      <url>/2016/06/17/build-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p> 安装git和Node.js，<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git下载地址</a>,<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js下载地址</a><br> 安装完成之后，就可进行hexo博客框架的安装<br>   <a id="more"></a><br> 这些都在本地完成的</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p> 执行完成之后hexo就安装成功了，第一步结束，环境配置完毕就可以开始创建自己的博客了</p><h2 id="Github上创建仓库"><a href="#Github上创建仓库" class="headerlink" title="Github上创建仓库"></a>Github上创建仓库</h2><p> 创建与用户名对应的仓库，仓库名为your_user_name.github.io(your_user_name.github.com的好像也可以)<br> <img src="/2016/06/17/build-blog/Githubpicture.png" alt="Github"></p><h2 id="博客的创建"><a href="#博客的创建" class="headerlink" title="博客的创建"></a>博客的创建</h2><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#init后的名字可以随便起，不会有有什么影响</span></span><br><span class="line">hexo init deathswaltz.github.io</span><br><span class="line"><span class="built_in">cd</span> deathswaltz.github.io</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>  init后面是项目的名字，这样就会生成一个deathswaltz.github.io的文件夹</p><h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>  打开创建出文件夹下的_config.yml文件进行配置，可以使用sublime text，这是个非常好用的编辑器<br>  <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#博客名字</span></span><br><span class="line">title: Hexo</span><br><span class="line"><span class="comment">#子标题</span></span><br><span class="line">subtitle:</span><br><span class="line"><span class="comment">#博客描述</span></span><br><span class="line">description:</span><br><span class="line"><span class="comment">#作者名字</span></span><br><span class="line">author: deathswaltz</span><br><span class="line"><span class="comment">#语言</span></span><br><span class="line">language: zh-Hans</span><br><span class="line"><span class="comment">#头像</span></span><br><span class="line">avatar: https://avatars0.githubusercontent.com/u/<span class="number">10008846</span>?v=<span class="number">3</span>&amp;s=<span class="number">460</span></span><br><span class="line"><span class="comment">#主题</span></span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  <span class="comment">#使用Git发布</span></span><br><span class="line">  type: git</span><br><span class="line">  <span class="comment">#仓库地址</span></span><br><span class="line">  repository: https://github.com/DeathsWaltz/DeathsWaltz.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>  其实到现在博客差不多已经搭建的好了<br>  现在可以执行下列命令来在本地运行起来<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>  然后再浏览器通过<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>来进行访问</p><p>   发布到Github上使用以下命令：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>  或者<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></p><p>  发布到Github上之后可以使用刚才创建的仓库名来访问，如：<a href="http://deathswaltz.github.io" target="_blank" rel="noopener">deathswaltz.github.io</a></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><blockquote><p>hexo的默认主题是landscape，个人觉得这个主题并不怎么好看，所以使用next主题。<br>  在git bash 执行git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next,这样即可进行next主题下载</p></blockquote><blockquote><p>下载完成后，在博客所在路径下的themes文件夹下面可以看到一个名为next的文件夹。要应用这个主题，需要我们修改站点配置文件_config.yml，注意这个_config.yml是themes/next下的不要和博客主目录下的弄混了，把之前的theme: landscape修改为theme: next。这时可以hexo   g和hexo s，然后在刷新浏览器就可以看到博客是next的主题了</p></blockquote><blockquote><p>NexT 通过 Scheme 提供主题中的主题。 Mist 是 NexT 的第一款 Scheme。启用 Mist 仅需在 主题配置文件 中将 #scheme: Mist 前面的 # 注释去掉即可。</p></blockquote><p> 菜单配置在 主题配置文件 的 menu。 若站点运行在子目录中，请将链接前缀的 / 去掉。默认支持的菜单项有：<br>  <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">home: /</span><br><span class="line">archives: /archives</span><br><span class="line"><span class="comment">#about: /about</span></span><br><span class="line"><span class="comment">#categories: /categories</span></span><br><span class="line">tags: /tags</span><br><span class="line"><span class="comment">#commonweal: /404.html</span></span><br></pre></td></tr></table></figure></p><h3 id="创建-“关于我”-页面"><a href="#创建-“关于我”-页面" class="headerlink" title="创建 “关于我” 页面"></a>创建 “关于我” 页面</h3><p>  新建一个 about 页面：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></p><p>  菜单显示 about 链接，在主题的 _configy.yml 设置中将 menu 中 about 前面的注释去掉即可。</p><h3 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h3><p>  添加一个 分类 页面，并在菜单中显示页面链接。</p><ol><li><p>新建一个页面，命名为 categories 。命令如下：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: <span class="number">2014</span><span class="number">-12</span><span class="number">-22</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">04</span></span><br><span class="line">type: <span class="string">"categories"</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="创建标签云页面"><a href="#创建标签云页面" class="headerlink" title="创建标签云页面"></a>创建标签云页面</h3><p>添加一个标签云页面，并在菜单中显示页面链接。</p><ol><li><p>新建一个页面，命名为 tags 。命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></li><li><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p> <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">date: <span class="number">2014</span><span class="number">-12</span><span class="number">-22</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">04</span></span><br><span class="line">type: <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></li><li><p>在菜单中添加链接。编辑主题的 _config.yml ，添加 tags 到 menu 中。</p></li></ol><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>在需要显示摘要的地方添加如下代码即可：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more-- &gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><h3 id="多说评论系统"><a href="#多说评论系统" class="headerlink" title="多说评论系统"></a>多说评论系统</h3><ul><li><p>使用多说前需要先在 多说 创建一个站点。具体步骤如下：</p><p>  登录后在首页选择 “我要安装”。<br>  创建站点，填写站点相关信息。多说域名 这一栏填写的即是你的 duoshuo_shortname。<br>  创建站点完成后在站点配置文件 中新增 duoshuo_shortname 字段，值设置成上一步中的值。</p></li></ul><p>本人第一次写博客，用Markdown也是第一次，哪里写的不好请指教。<br>以上</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

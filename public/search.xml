<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[2018久石让与新日本爱乐世界梦幻交响乐团深圳音乐会]]></title>
      <url>https://akapril.github.io/2018/09/20/joehisaishi-wdo-2018-ch/</url>
      <content type="html"><![CDATA[<h2 id="深圳之旅"><a href="#深圳之旅" class="headerlink" title="深圳之旅"></a>深圳之旅</h2><h3 id="济南遥墙机场安检中"><a href="#济南遥墙机场安检中" class="headerlink" title="济南遥墙机场安检中"></a>济南遥墙机场安检中</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180908_173437.jpg" alt="安检"></p>
<a id="more"></a>
<h3 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180908_185913.jpg" alt="出发"></p>
<h3 id="春茧体育馆"><a href="#春茧体育馆" class="headerlink" title="春茧体育馆"></a>春茧体育馆</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_140508.jpg" alt="春茧体育馆"></p>
<h3 id="送给久石让的花"><a href="#送给久石让的花" class="headerlink" title="送给久石让的花"></a>送给久石让的花</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_161748.jpg" alt="送给久石让的花"></p>
<h3 id="非官方周边"><a href="#非官方周边" class="headerlink" title="非官方周边"></a>非官方周边</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_165110.jpg" alt="非官方周边"></p>
<h3 id="非官方周边：徽章"><a href="#非官方周边：徽章" class="headerlink" title="非官方周边：徽章"></a>非官方周边：徽章</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_165235.jpg" alt="非官方周边：徽章"></p>
<h3 id="意外收获：面基下限大佬的意外惊喜"><a href="#意外收获：面基下限大佬的意外惊喜" class="headerlink" title="意外收获：面基下限大佬的意外惊喜"></a>意外收获：面基下限大佬的意外惊喜</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_233413.jpg" alt="意外收获"></p>
<h3 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_192941.jpg" alt="手册"></p>
<h3 id="渣像素1"><a href="#渣像素1" class="headerlink" title="渣像素1"></a>渣像素1</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_193037.jpg" alt="渣渣像素1"></p>
<h3 id="渣像素2"><a href="#渣像素2" class="headerlink" title="渣像素2"></a>渣像素2</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_193041.jpg" alt="渣渣像素2"></p>
<h3 id="渣像素3"><a href="#渣像素3" class="headerlink" title="渣像素3"></a>渣像素3</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_193043.jpg" alt="渣渣像素3"></p>
<h3 id="渣像素4"><a href="#渣像素4" class="headerlink" title="渣像素4"></a>渣像素4</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_201025.jpg" alt="渣渣像素4"></p>
<h3 id="渣像素5"><a href="#渣像素5" class="headerlink" title="渣像素5"></a>渣像素5</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180909_202211.jpg" alt="渣渣像素5"></p>
<h3 id="返程"><a href="#返程" class="headerlink" title="返程"></a>返程</h3><p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180910_062945.jpg" alt="返程"></p>
<p><img src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/IMG_20180910_063356.jpg" alt="返程"></p>
<h3 id="久石让同好群中群友拍摄"><a href="#久石让同好群中群友拍摄" class="headerlink" title="久石让同好群中群友拍摄"></a>久石让同好群中群友拍摄</h3><video id="video" controls preload="none" width="100%"><br><source id="mp4" src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/B898A2B47A936E08D34EAB8984CD341E.mp4" type="video/mp4"><br></video>

<video id="video" controls preload="none" width="100%"><br><source id="mp4" src="https://azrael-1252339850.cos.ap-chengdu.myqcloud.com/joehisaishi/F6C92BC62415ACFB515F59675F721C3A.mp4" type="video/mp4"><br></video>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客Github Pages配置Https]]></title>
      <url>https://akapril.github.io/2016/07/21/hexo-github-pages-https/</url>
      <content type="html"><![CDATA[<h3 id="Github-Pages应用自定义域名"><a href="#Github-Pages应用自定义域名" class="headerlink" title="Github Pages应用自定义域名"></a>Github Pages应用自定义域名</h3><p>默认情况下访问GitHub Pages页面的域名为<code>username.github.io</code>，如果需要使用自己的域名（以下简称“你的域名”），可<a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/" target="_blank" rel="noopener">参考官方的帮助文档</a>，其实非常简单：</p>
<ol>
<li>在repo根目录下创建CNAME文件，内容为你的域名。</li>
<li>在你的域名管理中心，添加一条CNAME记录，指向<code>username.github.io</code>。（将username替换为你的GitHub用户名）</li>
</ol>
<p>现在，访问<code>http://你的域名</code> ，已经可以访问到站点首页了。而如果访问<code>http://username.github.io</code> （即原来的地址），将被302跳转到<code>http://你的域名</code>。<br><a id="more"></a></p>
<h3 id="Https的问题"><a href="#Https的问题" class="headerlink" title="Https的问题"></a>Https的问题</h3><p>尝试直接访问<code>https://你的域名</code>，浏览器会报<code>SSL_DOMAIN_NOT_MATCHED</code>警告。因为GitHub Pages默认提供的SSL证书的根域名是<code>github.io</code>，和你的域名不相同。<br>而且，GitHub Pages不支持上传SSL证书。</p>
<h3 id="使用CloudFlare"><a href="#使用CloudFlare" class="headerlink" title="使用CloudFlare"></a>使用CloudFlare</h3><ol>
<li>首先去<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">https://www.cloudflare.com/</a>注册账户，配置好你的网站，然后把你域名的DNS服务换成cloudflare提供给你的DNS</li>
<li>在cloudflare的Crypto页中，SSL设置为Flexible。这将允许CDN到github pages之间的访问为http。</li>
</ol>
<h3 id="强制https"><a href="#强制https" class="headerlink" title="强制https"></a>强制https</h3><p>cloudflare提供<code>Page Rules</code>功能，可设置路由规则。通过规则中的<code>Always use https</code>选项，可以将用户强制跳转到https。<br><img src="/2016/07/21/hexo-github-pages-https/pagerule.png" alt="pagerule"></p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><ol>
<li><p>站点配置文件_config.yml添加如下配置(_config.yml配置文件是主题里的)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">url: https://www.yoursite.com   # with the https protocol</span><br><span class="line">enforce_ssl: www.yoursite.com   # without any protocol</span><br><span class="line"># 例:</span><br><span class="line">url: https://blog.deathsw.com</span><br><span class="line">enforce_ssl: blog.deathsw.com</span><br></pre></td></tr></table></figure>
</li>
<li><p>主题的head文件添加以下配置<br>修改文件为\themes\next\layout\_partials下的head.swig</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"canonical"</span> href=<span class="string">" &#123; &#123; site.url &#125; &#125;&#123; &#123; page.url &#125; &#125;"</span> /&gt;</span><br><span class="line"> &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> host = <span class="string">"yoursite.com"</span>;</span><br><span class="line">    <span class="keyword">if</span> ((host == <span class="built_in">window</span>.location.host) &amp;&amp; (<span class="built_in">window</span>.location.protocol != <span class="string">"https:"</span>))</span><br><span class="line">        <span class="built_in">window</span>.location.protocol = <span class="string">"https"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>现在，通过<code>https://你的域名</code>已经可以访问站点首页了。</p>
<p>参考：<br><a href="https://sheharyar.me/blog/free-ssl-for-github-pages-with-custom-domains/" target="_blank" rel="noopener">https://sheharyar.me/blog/free-ssl-for-github-pages-with-custom-domains/</a><br><a href="https://blog.chionlab.moe/2016/01/28/github-pages-with-https/" target="_blank" rel="noopener">https://blog.chionlab.moe/2016/01/28/github-pages-with-https/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Github Page和Hexo搭建个人博客]]></title>
      <url>https://akapril.github.io/2016/06/17/build-blog/</url>
      <content type="html"><![CDATA[<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p> 安装git和Node.js，<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git下载地址</a>,<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js下载地址</a><br> 安装完成之后，就可进行hexo博客框架的安装<br>   <a id="more"></a><br> 这些都在本地完成的<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p>
<p> 执行完成之后hexo就安装成功了，第一步结束，环境配置完毕就可以开始创建自己的博客了</p>
<h2 id="Github上创建仓库"><a href="#Github上创建仓库" class="headerlink" title="Github上创建仓库"></a>Github上创建仓库</h2><p> 创建与用户名对应的仓库，仓库名为your_user_name.github.io(your_user_name.github.com的好像也可以)<br> <img src="/2016/06/17/build-blog/Githubpicture.png" alt="Github"></p>
<h2 id="博客的创建"><a href="#博客的创建" class="headerlink" title="博客的创建"></a>博客的创建</h2><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#init后的名字可以随便起，不会有有什么影响</span></span><br><span class="line">hexo init deathswaltz.github.io</span><br><span class="line"><span class="built_in">cd</span> deathswaltz.github.io</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>  init后面是项目的名字，这样就会生成一个deathswaltz.github.io的文件夹</p>
<h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>  打开创建出文件夹下的_config.yml文件进行配置，可以使用sublime text，这是个非常好用的编辑器<br>  <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#博客名字</span></span><br><span class="line">title: Hexo</span><br><span class="line"><span class="comment">#子标题</span></span><br><span class="line">subtitle:</span><br><span class="line"><span class="comment">#博客描述</span></span><br><span class="line">description:</span><br><span class="line"><span class="comment">#作者名字</span></span><br><span class="line">author: deathswaltz</span><br><span class="line"><span class="comment">#语言</span></span><br><span class="line">language: zh-Hans</span><br><span class="line"><span class="comment">#头像</span></span><br><span class="line">avatar: https:<span class="regexp">//</span>avatars0.githubusercontent.com/u/<span class="number">10008846</span>?v=<span class="number">3</span>&amp;s=<span class="number">460</span></span><br><span class="line"><span class="comment">#主题</span></span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  <span class="comment">#使用Git发布</span></span><br><span class="line">  type: git</span><br><span class="line">  <span class="comment">#仓库地址</span></span><br><span class="line">  repository: https:<span class="regexp">//gi</span>thub.com/DeathsWaltz/DeathsWaltz.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p>
<p>  其实到现在博客差不多已经搭建的好了<br>  现在可以执行下列命令来在本地运行起来<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p>
<p>  然后再浏览器通过<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>来进行访问</p>
<p>   发布到Github上使用以下命令：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>
<p>  或者<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></p>
<p>  发布到Github上之后可以使用刚才创建的仓库名来访问，如：<a href="http://deathswaltz.github.io" target="_blank" rel="noopener">deathswaltz.github.io</a></p>
<h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><blockquote>
<p>hexo的默认主题是landscape，个人觉得这个主题并不怎么好看，所以使用next主题。<br>  在git bash 执行git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next,这样即可进行next主题下载</p>
<p>下载完成后，在博客所在路径下的themes文件夹下面可以看到一个名为next的文件夹。要应用这个主题，需要我们修改站点配置文件_config.yml，注意这个_config.yml是themes/next下的不要和博客主目录下的弄混了，把之前的theme: landscape修改为theme: next。这时可以hexo   g和hexo s，然后在刷新浏览器就可以看到博客是next的主题了</p>
<p>NexT 通过 Scheme 提供主题中的主题。 Mist 是 NexT 的第一款 Scheme。启用 Mist 仅需在 主题配置文件 中将 #scheme: Mist 前面的 # 注释去掉即可。</p>
</blockquote>
<p> 菜单配置在 主题配置文件 的 menu。 若站点运行在子目录中，请将链接前缀的 / 去掉。默认支持的菜单项有：<br>  <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">home: /</span><br><span class="line">archives: /archives</span><br><span class="line"><span class="comment">#about: /about</span></span><br><span class="line"><span class="comment">#categories: /categories</span></span><br><span class="line">tags: /tags</span><br><span class="line"><span class="comment">#commonweal: /404.html</span></span><br></pre></td></tr></table></figure></p>
<h3 id="创建-“关于我”-页面"><a href="#创建-“关于我”-页面" class="headerlink" title="创建 “关于我” 页面"></a>创建 “关于我” 页面</h3><p>  新建一个 about 页面：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></p>
<p>  菜单显示 about 链接，在主题的 _configy.yml 设置中将 menu 中 about 前面的注释去掉即可。</p>
<h3 id="创建分类页面"><a href="#创建分类页面" class="headerlink" title="创建分类页面"></a>创建分类页面</h3><p>  添加一个 分类 页面，并在菜单中显示页面链接。</p>
<ol>
<li><p>新建一个页面，命名为 categories 。命令如下：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"categories"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: <span class="number">2014</span><span class="number">-12</span><span class="number">-22</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">04</span></span><br><span class="line">type: <span class="string">"categories"</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="创建标签云页面"><a href="#创建标签云页面" class="headerlink" title="创建标签云页面"></a>创建标签云页面</h3><p>添加一个标签云页面，并在菜单中显示页面链接。</p>
<ol>
<li><p>新建一个页面，命名为 tags 。命令如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。</p>
 <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">date: <span class="number">2014</span><span class="number">-12</span><span class="number">-22</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">04</span></span><br><span class="line">type: <span class="string">"tags"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在菜单中添加链接。编辑主题的 _config.yml ，添加 tags 到 menu 中。</p>
</li>
</ol>
<h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>在需要显示摘要的地方添加如下代码即可：<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more-- &gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure></p>
<h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><h3 id="多说评论系统"><a href="#多说评论系统" class="headerlink" title="多说评论系统"></a>多说评论系统</h3><ul>
<li><p>使用多说前需要先在 多说 创建一个站点。具体步骤如下：</p>
<p>  登录后在首页选择 “我要安装”。<br>  创建站点，填写站点相关信息。多说域名 这一栏填写的即是你的 duoshuo_shortname。<br>  创建站点完成后在站点配置文件 中新增 duoshuo_shortname 字段，值设置成上一步中的值。</p>
</li>
</ul>
<p>本人第一次写博客，用Markdown也是第一次，哪里写的不好请指教。<br>以上</p>
]]></content>
    </entry>
    
  
  
</search>
